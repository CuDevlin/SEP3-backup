@page "/SeeMenu"
@using global::Shared.Model
@using HttpClients.ClientInterfaces
@using global::Shared.Dtos
@inject IMenuService menuService
@inject IItemService itemService
@inject IIngredientService ingredientService

<div class="page">
    <div class="datepicker">
        <InputDate @bind-Value="pickedDate"></InputDate>
        <button class="datebtn" @onclick="LoadMenu">See Menu</button>
 </div>
    <h3>Menu for the day</h3>

    @if (!string.IsNullOrEmpty(msg))
    {
        <div>
            <span>@msg</span>
        </div>
    }

    @if (menu == null)
    {
        <span>Loading..</span>
    }
    else if (pickedDate < DateTime.Today)
    {
        <span>Please input a valid date (today or in the future)</span>
    }
    else if (menu.Items == null || !menu.Items.Any())
    {
        <span>Unfortunately, there are no items on this menu</span>
    }

    else
    {
        <table>
            <tr>
                <th>Item</th>
                <th>Ingredients</th>
                <th>Allergens</th>
            </tr>

            @foreach (ItemMenuDto item in menu.Items)
            {
                <tr>
                    <td>
                        <p>@item.Name</p></td>
                    <td>@item.IngredientNames</td>
                    <td>@item.Allergens</td>
                </tr>
            }
        </table>
    }
</div>


@code {
    private string msg;
    private MenuBasicDto menu;
    private DateTime pickedDate;
    private string ingredients = "";
    private string allergens = "";


    protected override async Task OnInitializedAsync()
    {
        pickedDate = DateTime.Now;
        msg = "";
        try
        {
            menu = await menuService.GetMenuByDateAsync(DateTime.Now);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }

    private async Task LoadMenu()
    {
        msg = "";
        try
        {
            menu = await menuService.GetMenuByDateAsync(pickedDate);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }






}